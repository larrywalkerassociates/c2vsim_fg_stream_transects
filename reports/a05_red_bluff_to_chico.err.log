Traceback (most recent call last):
  File "C:\Users\JoseTomasDiazCasanue\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\JoseTomasDiazCasanue\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\JoseTomasDiazCasanue\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JoseTomasDiazCasanue\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\JoseTomasDiazCasanue\miniconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\JoseTomasDiazCasanue\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\JoseTomasDiazCasanue\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\JoseTomasDiazCasanue\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

# Let's load the stream nodes
stream_nodes_df = pd.read_csv(stream_nodes_csv_path)

# Let's load the simulated groundwater table at the stream nodes
sim_df = pd.read_csv(
    wt_stream_nodes_csv_path,
    parse_dates=["date"]
)

# Let's load the lithology logs
lith_df = pd.read_csv(lith_csv_path)

# Let's load the lithology logs shapefile
lith_lut_df = gpd.read_file(lith_logs_shp_path)

obs_lut_df = gpd.read_file(obs_wells_shp_path)

# We remove deep piezometers of nested well 398028N1220294
obs_lut_df = obs_lut_df[~obs_lut_df["site_code"].isin(
    ["398028N1220294W001", "398028N1220294W002", "398028N1220294W003"]
)].reset_index(drop=True)

# We remove deep well 401774N1222253W001 in crowded area
obs_lut_df = obs_lut_df[obs_lut_df["site_code"]!="401774N1222253W001"].reset_index(drop=True)

# We remove well without depth information 401678N1222236W001 in crowded area
obs_lut_df = obs_lut_df[obs_lut_df["site_code"]!="401678N1222236W001"].reset_index(drop=True)

# We remove too shallow well 401728N1222223W001 in crowded area
obs_lut_df = obs_lut_df[obs_lut_df["site_code"]!="401728N1222223W001"].reset_index(drop=True)

# We remove irrigation well 401550N1222006W001 in crowded area
obs_lut_df = obs_lut_df[obs_lut_df["site_code"]!="401550N1222006W001"].reset_index(drop=True)

# Let's load the observed groundwater levels

obs_df = pd.read_csv(obs_wells_csv_path, parse_dates=["date"])

obs_df.loc[(obs_df["site_code"]=="396568N1217818W001")&(obs_df["date"]=="2015-09-30"),"date"] = pd.to_datetime(
    "2015-10-31"
)

obs_df = obs_df.loc[obs_df["site_code"].isin(obs_lut_df["site_code"])].reset_index(drop=True)


step_miles = 1 * np.power(
    10, np.modf
            (np.log10(
            (
                    stream_nodes_df["proj"].max() - stream_nodes_df["proj"].min()
            ) / 1609.34
        )
        )[1] - 1
)

transect_start =100*1609.34  # 100 miles from north end, Chico

transect_end = 50*1609.34 # 50 miles from north end, Red Bluff

transect_length = transect_start - transect_end

ticks = np.arange(
    0,
    transect_length,
    step_miles * 1609.34)
labels = [f"{int((stream_nodes_df['proj'].max()-transect_start + tick) / 1609.34):,.0f}" for tick in ticks]
xticks_kwargs = {
    "ticks": transect_start - ticks,
    "labels": labels
}

tick_params_kwargs = {
    "labelsize": "xx-large"
}

xlabel_kwargs = {
    "fontsize": "xx-large"
}

ylabel_kwargs = {
    "fontsize": "xx-large"
}

title_kwargs = {
    "pad": 150,
    "fontsize": "xx-large"
}

legend_kwargs = {
                "loc": "lower center",
                "bbox_to_anchor": (0.5, 0),
                "ncols": 4,
    "fontsize": "xx-large"
            }

sim_kwargs = {
    "color": "blue",
    "label": "Simulated GWE",
    "linewidth": 2
}

subplot_kwargs = {"nrows": 2,
                              "height_ratios": [0.7, 0.3],
                              "figsize": (12, 8)}

obs_kwargs = {
            "label": 'Observed GWE',
            "markerfacecolor": "#4B7164",
            "marker": 'o',
            "color": "w",
    "markersize": 10,
    "s": 100
        }

streambed_kwargs = {
            "color": "#555555",
            "linestyle": "dashed",
            "label": "Bathymetry"
        }

kwargs = {
    "tick_params_kwargs": tick_params_kwargs,
    "xlabel_kwargs": xlabel_kwargs,
    "ylabel_kwargs": ylabel_kwargs,
    "title_kwargs": title_kwargs,
    "legend_kwargs": legend_kwargs,
    "sim_kwargs": sim_kwargs,
    "subplot_kwargs": subplot_kwargs,
    "xlim": (transect_start, transect_end),
    "title": "Sacramento River between Red Bluff and Chico",
    "ylim": (100, 250),
    "xticks_kwargs": xticks_kwargs,
    "borelog_width": 1000,
    "streambed_bottom_col":"bathymetry_ft",
    "streambed_kwargs": streambed_kwargs,
    "obs_kwargs": obs_kwargs
}


html_video = make_transect_animation(
        stream_nodes_df,
        sim_df,
        obs_df,
        obs_lut_df,
        lith_lut_df,
        lith_df,
    **kwargs)

widgets.HTML(
        value=html_video,
        placeholder="",
        description="",
    )
------------------

----- stdout -----
Error in callback <function _draw_all_if_interactive at 0x0000025420E04720> (for post_execute), with arguments args (),kwargs {}:
------------------

[31m---------------------------------------------------------------------------[39m
[31mAttributeError[39m                            Traceback (most recent call last)
[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\pyplot.py:279[39m, in [36m_draw_all_if_interactive[39m[34m()[39m
[32m    277[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_draw_all_if_interactive[39m() -> [38;5;28;01mNone[39;00m:
[32m    278[39m     [38;5;28;01mif[39;00m matplotlib.is_interactive():
[32m--> [39m[32m279[39m         [43mdraw_all[49m[43m([49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\_pylab_helpers.py:131[39m, in [36mGcf.draw_all[39m[34m(cls, force)[39m
[32m    129[39m [38;5;28;01mfor[39;00m manager [38;5;129;01min[39;00m [38;5;28mcls[39m.get_all_fig_managers():
[32m    130[39m     [38;5;28;01mif[39;00m force [38;5;129;01mor[39;00m manager.canvas.figure.stale:
[32m--> [39m[32m131[39m         [43mmanager[49m[43m.[49m[43mcanvas[49m[43m.[49m[43mdraw_idle[49m[43m([49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\backend_bases.py:1893[39m, in [36mFigureCanvasBase.draw_idle[39m[34m(self, *args, **kwargs)[39m
[32m   1891[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m._is_idle_drawing:
[32m   1892[39m     [38;5;28;01mwith[39;00m [38;5;28mself[39m._idle_draw_cntx():
[32m-> [39m[32m1893[39m         [38;5;28;43mself[39;49m[43m.[49m[43mdraw[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\backends\backend_agg.py:382[39m, in [36mFigureCanvasAgg.draw[39m[34m(self)[39m
[32m    379[39m [38;5;66;03m# Acquire a lock on the shared font cache.[39;00m
[32m    380[39m [38;5;28;01mwith[39;00m ([38;5;28mself[39m.toolbar._wait_cursor_for_draw_cm() [38;5;28;01mif[39;00m [38;5;28mself[39m.toolbar
[32m    381[39m       [38;5;28;01melse[39;00m nullcontext()):
[32m--> [39m[32m382[39m     [38;5;28;43mself[39;49m[43m.[49m[43mfigure[49m[43m.[49m[43mdraw[49m[43m([49m[38;5;28;43mself[39;49m[43m.[49m[43mrenderer[49m[43m)[49m
[32m    383[39m     [38;5;66;03m# A GUI class may be need to update a window using this draw, so[39;00m
[32m    384[39m     [38;5;66;03m# don't forget to call the superclass.[39;00m
[32m    385[39m     [38;5;28msuper[39m().draw()

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\artist.py:94[39m, in [36m_finalize_rasterization.<locals>.draw_wrapper[39m[34m(artist, renderer, *args, **kwargs)[39m
[32m     92[39m [38;5;129m@wraps[39m(draw)
[32m     93[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mdraw_wrapper[39m(artist, renderer, *args, **kwargs):
[32m---> [39m[32m94[39m     result = [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m,[49m[43m [49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m     95[39m     [38;5;28;01mif[39;00m renderer._rasterizing:
[32m     96[39m         renderer.stop_rasterizing()

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\artist.py:71[39m, in [36mallow_rasterization.<locals>.draw_wrapper[39m[34m(artist, renderer)[39m
[32m     68[39m     [38;5;28;01mif[39;00m artist.get_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m     69[39m         renderer.start_filter()
[32m---> [39m[32m71[39m     [38;5;28;01mreturn[39;00m [43mdraw[49m[43m([49m[43martist[49m[43m,[49m[43m [49m[43mrenderer[49m[43m)[49m
[32m     72[39m [38;5;28;01mfinally[39;00m:
[32m     73[39m     [38;5;28;01mif[39;00m artist.get_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\figure.py:3264[39m, in [36mFigure.draw[39m[34m(self, renderer)[39m
[32m   3261[39m [38;5;28;01mfinally[39;00m:
[32m   3262[39m     [38;5;28mself[39m.stale = [38;5;28;01mFalse[39;00m
[32m-> [39m[32m3264[39m [43mDrawEvent[49m[43m([49m[33;43m"[39;49m[33;43mdraw_event[39;49m[33;43m"[39;49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43mcanvas[49m[43m,[49m[43m [49m[43mrenderer[49m[43m)[49m[43m.[49m[43m_process[49m[43m([49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\backend_bases.py:1189[39m, in [36mEvent._process[39m[34m(self)[39m
[32m   1187[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_process[39m([38;5;28mself[39m):
[32m   1188[39m [38;5;250m    [39m[33;03m"""Process this event on ``self.canvas``, then unset ``guiEvent``."""[39;00m
[32m-> [39m[32m1189[39m     [38;5;28;43mself[39;49m[43m.[49m[43mcanvas[49m[43m.[49m[43mcallbacks[49m[43m.[49m[43mprocess[49m[43m([49m[38;5;28;43mself[39;49m[43m.[49m[43mname[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m)[49m
[32m   1190[39m     [38;5;28mself[39m.guiEvent = [38;5;28;01mNone[39;00m

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\cbook.py:366[39m, in [36mCallbackRegistry.process[39m[34m(self, s, *args, **kwargs)[39m
[32m    364[39m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m exc:
[32m    365[39m     [38;5;28;01mif[39;00m [38;5;28mself[39m.exception_handler [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m--> [39m[32m366[39m         [38;5;28;43mself[39;49m[43m.[49m[43mexception_handler[49m[43m([49m[43mexc[49m[43m)[49m
[32m    367[39m     [38;5;28;01melse[39;00m:
[32m    368[39m         [38;5;28;01mraise[39;00m

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\cbook.py:110[39m, in [36m_exception_printer[39m[34m(exc)[39m
[32m    108[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_exception_printer[39m(exc):
[32m    109[39m     [38;5;28;01mif[39;00m _get_running_interactive_framework() [38;5;129;01min[39;00m [[33m"[39m[33mheadless[39m[33m"[39m, [38;5;28;01mNone[39;00m]:
[32m--> [39m[32m110[39m         [38;5;28;01mraise[39;00m exc
[32m    111[39m     [38;5;28;01melse[39;00m:
[32m    112[39m         traceback.print_exc()

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\cbook.py:361[39m, in [36mCallbackRegistry.process[39m[34m(self, s, *args, **kwargs)[39m
[32m    359[39m [38;5;28;01mif[39;00m func [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    360[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m361[39m         [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m    362[39m     [38;5;66;03m# this does not capture KeyboardInterrupt, SystemExit,[39;00m
[32m    363[39m     [38;5;66;03m# and GeneratorExit[39;00m
[32m    364[39m     [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m exc:

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\animation.py:928[39m, in [36mAnimation._start[39m[34m(self, *args)[39m
[32m    925[39m [38;5;28mself[39m._fig.canvas.mpl_disconnect([38;5;28mself[39m._first_draw_id)
[32m    927[39m [38;5;66;03m# Now do any initial draw[39;00m
[32m--> [39m[32m928[39m [38;5;28;43mself[39;49m[43m.[49m[43m_init_draw[49m[43m([49m[43m)[49m
[32m    930[39m [38;5;66;03m# Add our callback for stepping the animation and[39;00m
[32m    931[39m [38;5;66;03m# actually start the event_source.[39;00m
[32m    932[39m [38;5;28mself[39m.event_source.add_callback([38;5;28mself[39m._step)

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\animation.py:1770[39m, in [36mFuncAnimation._init_draw[39m[34m(self)[39m
[32m   1762[39m         warnings.warn(
[32m   1763[39m             [33m"[39m[33mCan not start iterating the frames for the initial draw. [39m[33m"[39m
[32m   1764[39m             [33m"[39m[33mThis can be caused by passing in a 0 length sequence [39m[33m"[39m
[32m   (...)[39m[32m   1767[39m             [33m"[39m[33mit may be exhausted due to a previous display or save.[39m[33m"[39m
[32m   1768[39m         )
[32m   1769[39m         [38;5;28;01mreturn[39;00m
[32m-> [39m[32m1770[39m     [38;5;28;43mself[39;49m[43m.[49m[43m_draw_frame[49m[43m([49m[43mframe_data[49m[43m)[49m
[32m   1771[39m [38;5;28;01melse[39;00m:
[32m   1772[39m     [38;5;28mself[39m._drawn_artists = [38;5;28mself[39m._init_func()

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\animation.py:1789[39m, in [36mFuncAnimation._draw_frame[39m[34m(self, framedata)[39m
[32m   1785[39m     [38;5;28mself[39m._save_seq = [38;5;28mself[39m._save_seq[-[38;5;28mself[39m._save_count:]
[32m   1787[39m [38;5;66;03m# Call the func with framedata and args. If blitting is desired,[39;00m
[32m   1788[39m [38;5;66;03m# func needs to return a sequence of any artists that were modified.[39;00m
[32m-> [39m[32m1789[39m [38;5;28mself[39m._drawn_artists = [38;5;28;43mself[39;49m[43m.[49m[43m_func[49m[43m([49m[43mframedata[49m[43m,[49m[43m [49m[43m*[49m[38;5;28;43mself[39;49m[43m.[49m[43m_args[49m[43m)[49m
[32m   1791[39m [38;5;28;01mif[39;00m [38;5;28mself[39m._blit:
[32m   1793[39m     err = [38;5;167;01mRuntimeError[39;00m([33m'[39m[33mThe animation function must return a sequence [39m[33m'[39m
[32m   1794[39m                        [33m'[39m[33mof Artist objects.[39m[33m'[39m)

[36mFile [39m[32m~\c2vsim_fg_stream_transects\functions\make_transect_animation.py:184[39m, in [36mmake_transect_animation.<locals>.update[39m[34m(ts, obs_df, obs_lut_df, sim_df, date_col, proj_d_col, sim_col, title, title_kwargs, obs_kwargs, well_id_col)[39m
[32m    182[39m     x = obs_lut_df.loc[obs_lut_df[well_id_col] == well, proj_d_col].values[[32m0[39m]
[32m    183[39m     obs = obs_df_ts.loc[obs_df_ts[well_id_col] == well, obs_col].values[[32m0[39m]
[32m--> [39m[32m184[39m     artists.append([43maxes[49m[43m[[49m[32;43m0[39;49m[43m][49m[43m.[49m[43mscatter[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43mobs[49m[43m,[49m[43m [49m[43mlabel[49m[43m=[49m[43mwell[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mobs_kwargs[49m[43m)[49m)
[32m    186[39m [38;5;66;03m# Let's add simulated groundwater levels for the given timestep[39;00m
[32m    187[39m sim_df_ts = sim_df[sim_df[date_col] == ts].reset_index(drop=[38;5;28;01mTrue[39;00m)

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\_api\deprecation.py:453[39m, in [36mmake_keyword_only.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m    447[39m [38;5;28;01mif[39;00m [38;5;28mlen[39m(args) > name_idx:
[32m    448[39m     warn_deprecated(
[32m    449[39m         since, message=[33m"[39m[33mPassing the [39m[38;5;132;01m%(name)s[39;00m[33m [39m[38;5;132;01m%(obj_type)s[39;00m[33m [39m[33m"[39m
[32m    450[39m         [33m"[39m[33mpositionally is deprecated since Matplotlib [39m[38;5;132;01m%(since)s[39;00m[33m; the [39m[33m"[39m
[32m    451[39m         [33m"[39m[33mparameter will become keyword-only in [39m[38;5;132;01m%(removal)s[39;00m[33m.[39m[33m"[39m,
[32m    452[39m         name=name, obj_type=[33mf[39m[33m"[39m[33mparameter of [39m[38;5;132;01m{[39;00mfunc.[34m__name__[39m[38;5;132;01m}[39;00m[33m()[39m[33m"[39m)
[32m--> [39m[32m453[39m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\__init__.py:1524[39m, in [36m_preprocess_data.<locals>.inner[39m[34m(ax, data, *args, **kwargs)[39m
[32m   1521[39m [38;5;129m@functools[39m.wraps(func)
[32m   1522[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34minner[39m(ax, *args, data=[38;5;28;01mNone[39;00m, **kwargs):
[32m   1523[39m     [38;5;28;01mif[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m-> [39m[32m1524[39m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m
[32m   1525[39m [43m            [49m[43max[49m[43m,[49m
[32m   1526[39m [43m            [49m[43m*[49m[38;5;28;43mmap[39;49m[43m([49m[43mcbook[49m[43m.[49m[43msanitize_sequence[49m[43m,[49m[43m [49m[43margs[49m[43m)[49m[43m,[49m
[32m   1527[39m [43m            [49m[43m*[49m[43m*[49m[43m{[49m[43mk[49m[43m:[49m[43m [49m[43mcbook[49m[43m.[49m[43msanitize_sequence[49m[43m([49m[43mv[49m[43m)[49m[43m [49m[38;5;28;43;01mfor[39;49;00m[43m [49m[43mk[49m[43m,[49m[43m [49m[43mv[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43mkwargs[49m[43m.[49m[43mitems[49m[43m([49m[43m)[49m[43m}[49m[43m)[49m
[32m   1529[39m     bound = new_sig.bind(ax, *args, **kwargs)
[32m   1530[39m     auto_label = (bound.arguments.get(label_namer)
[32m   1531[39m                   [38;5;129;01mor[39;00m bound.kwargs.get(label_namer))

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\axes\_axes.py:5055[39m, in [36mAxes.scatter[39m[34m(self, x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, edgecolors, colorizer, plotnonfinite, **kwargs)[39m
[32m   5051[39m         keys_str = [33m"[39m[33m, [39m[33m"[39m.join([33mf[39m[33m"[39m[33m'[39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[33m'[39m[33m"[39m [38;5;28;01mfor[39;00m k [38;5;129;01min[39;00m extra_keys)
[32m   5052[39m         _api.warn_external(
[32m   5053[39m             [33m"[39m[33mNo data for colormapping provided via [39m[33m'[39m[33mc[39m[33m'[39m[33m. [39m[33m"[39m
[32m   5054[39m             [33mf[39m[33m"[39m[33mParameters [39m[38;5;132;01m{[39;00mkeys_str[38;5;132;01m}[39;00m[33m will be ignored[39m[33m"[39m)
[32m-> [39m[32m5055[39m [43mcollection[49m[43m.[49m[43m_internal_update[49m[43m([49m[43mkwargs[49m[43m)[49m
[32m   5057[39m [38;5;66;03m# Classic mode only:[39;00m
[32m   5058[39m [38;5;66;03m# ensure there are margins to allow for the[39;00m
[32m   5059[39m [38;5;66;03m# finite size of the symbols.  In v2.x, margins[39;00m
[32m   5060[39m [38;5;66;03m# are present by default, so we disable this[39;00m
[32m   5061[39m [38;5;66;03m# scatter-specific override.[39;00m
[32m   5062[39m [38;5;28;01mif[39;00m mpl.rcParams[[33m'[39m[33m_internal.classic_mode[39m[33m'[39m]:

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\artist.py:1233[39m, in [36mArtist._internal_update[39m[34m(self, kwargs)[39m
[32m   1226[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_internal_update[39m([38;5;28mself[39m, kwargs):
[32m   1227[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m   1228[39m [33;03m    Update artist properties without prenormalizing them, but generating[39;00m
[32m   1229[39m [33;03m    errors as if calling `set`.[39;00m
[32m   1230[39m 
[32m   1231[39m [33;03m    The lack of prenormalization is to maintain backcompatibility.[39;00m
[32m   1232[39m [33;03m    """[39;00m
[32m-> [39m[32m1233[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_update_props[49m[43m([49m
[32m   1234[39m [43m        [49m[43mkwargs[49m[43m,[49m[43m [49m[33;43m"[39;49m[38;5;132;43;01m{cls.__name__}[39;49;00m[33;43m.set() got an unexpected keyword argument [39;49m[33;43m"[39;49m
[32m   1235[39m [43m        [49m[33;43m"[39;49m[38;5;132;43;01m{prop_name!r}[39;49;00m[33;43m"[39;49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\pypoetry\Cache\virtualenvs\c2vsim-fg-stream-transects-pdxHzf5m-py3.11\Lib\site-packages\matplotlib\artist.py:1206[39m, in [36mArtist._update_props[39m[34m(self, props, errfmt)[39m
[32m   1204[39m             func = [38;5;28mgetattr[39m([38;5;28mself[39m, [33mf[39m[33m"[39m[33mset_[39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[33m"[39m, [38;5;28;01mNone[39;00m)
[32m   1205[39m             [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mcallable[39m(func):
[32m-> [39m[32m1206[39m                 [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(
[32m   1207[39m                     errfmt.format([38;5;28mcls[39m=[38;5;28mtype[39m([38;5;28mself[39m), prop_name=k),
[32m   1208[39m                     name=k)
[32m   1209[39m             ret.append(func(v))
[32m   1210[39m [38;5;28;01mif[39;00m ret:

[31mAttributeError[39m: PathCollection.set() got an unexpected keyword argument 'markersize'

